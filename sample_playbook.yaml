---
# This playbook is designed to be pulled and modified by an external automation tool (like Tines).
# The goal is to dynamically change the message that is sent to the target host.

- name: Display Dynamic System Status
  # We are explicitly running this against 'localhost' since the tasks are just
  # for demonstration/logging and do not require a separate remote server.
  hosts: localhost 
  gather_facts: no
  
  # *** FIX: Specify that Ansible should run commands locally without using SSH. ***
  ansible.builtin.connection: local

  # 1. Define the variable to be modified by the external system (Tines)
  # When Tines pulls the file, it will look for and change this line.
  vars:
    deployment_status: "Default Status: Playbook has not yet been updated by Tines."

  tasks:
    - name: Ensure Python is available for the 'debug' module (optional, but good practice)
      # This task is now safe because it uses the local connection.
      ansible.builtin.raw: /usr/bin/env python -V
      changed_when: false
      
    - name: Log the current deployment status message
      # The 'debug' module is the most important task for the demo, showing the variable change.
      ansible.builtin.debug:
        msg: "--- Current System Message: {{ deployment_status }} ---"

    - name: Simulate a lightweight change (Writing to a temporary log file inside the EE)
      # This task now runs inside the execution environment container.
      ansible.builtin.command:
        cmd: "echo 'Deployment status was logged on {{ ansible_date_time.iso8601_micro }}' >> /tmp/ansible_demo.log"
      # Note: We removed 'delegate_to' because 'connection: local' already handles execution on the control node.
